let 
doc = 
  [
    Documentation.Api = "https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-issue-search/#api-rest-api-3-search-get",
    Documentation.Name =  "Get JIRA Keys by Board Filter", 
    Documentation.FunctionName =  "Jira.GetKeysByBoardFilter", 
    Documentation.Description = "This function is a jira specific pattern, which retrieves the JIRA keys for specific board filters. Ensure you modify your domain(s) to suit your specific requirements. Note that the function name is dependent on the name of the query in PowerBI in which the function is pasted, so if the Query is called 'Query1', replace "&functionName&" with Query1 when calling the function.", 
    Documentation.Examples = {
          [
            Description = "Retrieve Filter Ids with specified column name",
            Code = functionName&"(Source, ""DomainColumn"",""FilterColumn"",""Key"")",
            Result = "A new column 'Key' is added with the keys for value combination the specified columns"
          ],
          [
            Description = "Retrieve Filter Ids with default column name",
            Code = functionName&"(Source, ""DomainColumn"",""FilterColumn"")",
            Result = "A new column 'keys' (default column name) is added with the keys for value combination the specified columns"
          ]
	}
  ],
fn = (previousStep as table, Domains as text, Filters as text, optional NewKeyColumnName as nullable text)=>
let NewKeyColumnName = if NewKeyColumnName = null then "keys" else NewKeyColumnName in 
  Table.RemoveColumns(Table.ExpandRecordColumn(
	  Table.ExpandListColumn(
		  Table.ExpandRecordColumn(
		    Table.AddColumn(
	    		Table.AddColumn(previousStep, "tmpCustom", 
            each Text.BeforeDelimiter(Record.Field(_,Filters)," ORDER BY ",0)),NewKeyColumnName, each 
	            if Text.From( Record.Field(_,Domains)) = "<domain>" 
	            then Json.Document(Web.Contents("<domain>",
	              [RelativePath = "/rest/api/3/search/",
	               Query = [
	                 jql=Text.From(Record.Field(_,Filters)) ,
			 		 fields="key",
                     maxResults="100000"
	               ]
	              ]
	            )) 
	          else null
	        ), NewKeyColumnName, {"issues"}
		  ), "issues"
		), "issues", {"key"}, {NewKeyColumnName}
	  ),"tmpCustom")
 in 
Value.ReplaceType(fn, Value.ReplaceMetadata(Value.Type(fn), doc))
