/*
This Power Query function is used to retrieve JIRA keys by board Id, and can be better suited than retrieving JIRA keys by project if a project contains multiple boards.

This function leverages the JIRA board filters to retrieve the data.

This does not work without amendments due to the way API calls are handled. It is set up, so auto-refresh will work. Auto refresh typically fails due to the domain part in Web Contents being dynamic, which is not allowed. Auto-refresh also does not work if you add the if statement within Web.Contents, if you use a parameter or if you reference the column directly within Web.Contents.

While you could retrieve any number of fields with this function, JIRA throttles the amount of data being returned if you request all data. To limit this, you could use this function to retrieve the keys and subsequently retrieve all fields for the specific key (or list of keys).

To implement this, either:
- Add a blank query in PowerBI
- Copy this file into the blank Query
- Rename the blank Query to whatever you want to call the function
- In the table where you want to use it, call the function via <newstep> = <function name>(<previous step>,"<Domain column>","<board Id column")
Or: 
- Open the table where you want to use the function
- the Get Keys step as a new step and change SourceTable to the table containing the columns, change Domains to the name of the domain column (as a string) and Projects to the name of the Project Id column (as a string) 

In any case, also change <your domain> to the domain name of your JIRA tenant. If the organisation has more than one domain, you can add more by extending the if statements within the "Get" steps by adding more if statements.

Note: If the function fails, this might be due to the board jql not being correct. For instance if a project referenced in a filter is archived. You can then either fix the board filter, or use e.g. a replace function to strip out the erroneous project. THis needs to be added before the #"Get Keys via API" and after the #"Get Filters for board"  steps.
*/

(previousStep as table, Domains as text, BoardIds as text)=>
let 
	#"Get Filter id for board" = 
	  Table.ExpandRecordColumn(
		Table.ExpandRecordColumn(
		  Table.AddColumn(previousStep, "filter id", each 
			if Text.From( Record.Field(_,Domains)) = "<your JIRA domain>" 
			then 
			  Json.Document(Web.Contents(
			   "<your JIRA domain>",
			   [RelativePath = "/rest/agile/1.0/board/" & Record.Field(_,BoardIds) & "/configuration"]
			  )) 
			else null
		  ), 
		  "filter id", {"filter"}
		), "filter", {"id"}, {"Filter Id"}
	  ),
  
	#"Get Filters for board" =
	  Table.ExpandRecordColumn(
	    Table.AddColumn(#"Get Filter id for board", "jql", each 
	      if Text.From( Record.Field(_,Domains)) = "<your JIRA domain>" 
	      then 
		    Json.Document(Web.Contents(
	          "<your JIRA domain>",
	          [RelativePath = "/rest/api/3/filter/" &Text.From( Record.Field(_,"Filter Id"))]
	        )) 
	      else null
	    ), "jql", {"jql"}, {"jql filter"}
      ),
  
	//Keeping the order by in the jql above will cause the data retrieval to fail
	
	#"Strip Order By" = 
      Table.RenameColumns(
	    Table.AddColumn(#"Get Filters for board", "Custom", each Text.BeforeDelimiter([jql filter]," ORDER BY ",0))
		,{{"Custom", "jql"}}
	  ),
  
	#"Get Keys via API" = 
	  Table.ExpandRecordColumn(
	    Table.ExpandListColumn(
		  Table.ExpandRecordColumn(
		    Table.AddColumn(#"Strip Order By", "keys", each 
	          if Text.From( Record.Field(_,Domains)) = "<your JIRA domain>" 
	          then 
			    Json.Document(Web.Contents(
	              "<your JIRA domain>",
	              [RelativePath = "/rest/api/3/search/",
	               Query = [
	                 jql=Text.From(Record.Field(_,"jql")) ,
					 fields="key",maxResults="100000"
	               ]
	              ]
	            )) 
	          else null
	        ), "keys", {"issues"}
		  ), "issues"
		), "issues", {"key"}
	  ),

	#"RemoveFilterCols" = Table.RemoveColumns(#"Get Keys via API",{"Filter Id", "jql filter", "jql"})  
in #"RemoveFilterCols"